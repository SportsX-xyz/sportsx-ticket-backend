model EventTicket {
  id            String             @id @default(uuid())
  eventId       String
  event         Event              @relation(fields: [eventId], references: [id])
  ticketTypeId  String
  ticketType    EventTicketType    @relation(fields: [ticketTypeId], references: [id])
  rowNumber     Int
  columnNumber  Int
  name          String             @db.VarChar(100)
  initialPrice  Decimal            @db.Decimal(18, 6)
  previousPrice Decimal            @db.Decimal(18, 6)
  price         Decimal            @db.Decimal(18, 6)
  saleStartTime DateTime
  saleEndTime   DateTime
  resaleTimes   Int                @default(0)
  status        TicketStatus       @default(NEW)
  nftTokenId    String?            @db.VarChar(255)
  ownerId       String?
  owner         Customer?          @relation(fields: [ownerId], references: [id], name: "TicketOwner")
  createdAt     DateTime           @default(now()) @db.Timestamptz
  updatedAt     DateTime           @updatedAt @db.Timestamptz
  orders        EventTicketOrder[] @relation(name: "TicketOrders")
  lastOrderId   String?            @unique
  lastOrder     EventTicketOrder?  @relation(fields: [lastOrderId], references: [id], name: "TicketLastOrder")
  staffId       String?
  staff         Customer?          @relation(fields: [staffId], references: [id], name: "TicketCheckInStaff")
}

enum TicketStatus {
  NEW
  LOCK
  SOLD
  USED
  RESALE
  NOT_EXIST
  NOT_FOR_SALE
}
